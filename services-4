#!/bin/bash

########################################################################
### servers confiuration and persistence
########################################################################
cd ~
. .local.cnf

########################################################################
### create upstream loadbalancers
sudo mkdir /etc/nginx/upstream

sudo tee /etc/nginx/upstream/notebook <<EOF
    upstream notebook {
        server 127.0.0.1:${NODE_NOTEBOOK_PORT};
    }
EOF

sudo tee /etc/nginx/upstream/rstudio <<EOF
    upstream rstudio {
        server 127.0.0.1:${NODE_RSTUDIO_PORT};
    }
EOF

########################################################################
### create default location
sudo mkdir /etc/nginx/location

sudo tee /etc/nginx/location/notebook <<EOF
        ### !!! IMPORTANT !!! ###
        location /notebook/edit {
            # allow 127.0.0.1;
            deny all;
        }
        location /notebook/files {
            # allow 192.168.1.0/24;
            deny all;
        }
        location /notebook {
            # allow 192.168.1.0/24;
            # deny all;
            proxy_pass http://notebook;
            # proxy_set_header Origin "";
            include proxy_params;
        }
EOF

sudo tee /etc/nginx/location/rstudio <<EOF
        location /rstudio {
            rewrite ^/rstudio/(.*) /\$1 break;
            proxy_pass http://rstudio/;
            include proxy_params;
        }
EOF

if [ -f /etc/nginx/proxy_params.orig ]; then
    sudo mv /etc/nginx/proxy_params /etc/nginx/proxy_params.bk
else
    sudo mv /etc/nginx/proxy_params /etc/nginx/proxy_params.orig
fi
sudo tee /etc/nginx/proxy_params <<EOF
proxy_set_header X-Real-IP \$remote_addr;
proxy_set_header Host \$http_host;
proxy_cache_bypass \$http_upgrade;
# proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
proxy_set_header X-Forwarded-Proto \$scheme;
add_header Front-End-Https on;

proxy_set_header X-NginX-Proxy true;

### WebSocket support
proxy_http_version 1.1;
proxy_set_header Upgrade \$http_upgrade;
proxy_set_header Connection 'upgrade';

proxy_redirect off;
proxy_ssl_session_reuse off;
EOF

if [ -f /etc/nginx/nginx.conf.orig ]; then
    sudo mv /etc/nginx/nginx.conf /etc/nginx/nginx.conf.bk
else
    sudo mv /etc/nginx/nginx.conf /etc/nginx/nginx.conf.orig
fi
sudo tee /etc/nginx/nginx.conf <<EOF
user www-data;
worker_processes 4;

pid /var/run/nginx.pid;

events {
    worker_connections 768;
}

http {
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    # server_tokens off;

    # server_names_hash_bucket_size 64;
    # server_name_in_redirect off;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
    ssl_prefer_server_ciphers on;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    gzip on;
    gzip_comp_level 6;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_types text/plain text/css text/csv application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_buffers 16 8k;

    large_client_header_buffers 4 16k;

    map \$http_upgrade \$connection_upgrade {
        default upgrade;
        '' close;
    }

    include upstream/*;

    # include /etc/nginx/conf.d/*.conf;
    # include /etc/nginx/sites-enabled/*;

    server {
        server_name $DOMAIN $NODE localhost;

        # listen 80;

        listen 443 ssl;
        ssl_certificate /etc/nginx/ssl/${DOMAIN}.crt;
        ssl_certificate_key /etc/nginx/ssl/${DOMAIN}.key;

        # include error.conf;
        include location/*;
    }
}
EOF
#sudo service nginx restart

if [ -f /etc/shiny-server/shiny-server.conf.orig ]; then
    sudo mv /etc/shiny-server/shiny-server.conf /etc/shiny-server/shiny-server.conf.bk
else
    sudo mv /etc/shiny-server/shiny-server.conf /etc/shiny-server/shiny-server.conf.orig
fi
sudo tee /etc/shiny-server/shiny-server.conf <<EOF
run_as $USER;

server {
    listen $NODE_RSTUDIO_PORT;

    location / {
        site_dir $HOME/$NODE_DOC_ROOT;
        log_dir $HOME/logs;

        ### !!! IMPORTANT !!! ###
        directory_index off;
    }
}
EOF

### nodejs daemon ###
sudo env PATH=$PATH:/usr/bin pm2 startup ubuntu -u $USER

sudo tee /etc/init.d/notebook <<EOF
#! /bin/sh

### BEGIN INIT INFO
# Provides:          notebook service daemon
# Required-Start:    \$local_fs \$remote_fs \$network
# Required-Stop:     \$local_fs \$remote_fs \$network
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: runs notebook
# Description:       iPython notebook service daemon
### END INIT INFO

case "\$1" in
    start)
        start-stop-daemon --start --quiet \
            --chuid ${USER}:${USER} --chdir=$HOME/$NODE_DOC_ROOT \
            --exec ${HOME}/.env/bin/ipython notebook --profile=nbserver --no-browser \
                || return 2
        ;;
    stop)
        start-stop-daemon --stop --quiet --retry=TERM/30/KILL/5 --name notebook
        return 0
        ;;
    restart)
        start-stop-daemon --stop --quiet --retry=TERM/30/KILL/5 --name notebook
        start-stop-daemon --start --quiet \
            --chuid ${USER}:${USER} --chdir=$HOME/$NODE_DOC_ROOT \
            --exec ${HOME}/.env/bin/ipython notebook --profile=nbserver --no-browser
        ;;
    *)
        echo "Usage: service notebook (start|stop|restart)" >&2
        exit 3
        ;;
esac

:
EOF
sudo chmod +x /etc/init.d/notebook

sudo tee /etc/init/notebook.conf <<EOF
description "iPython notebook sturtup persistence"
start on runlevel [2345]
stop on runlevel [!2345]

respawn
respawn limit 10 5

setuid $USER
setgid $USER
chdir $HOME/$NODE_DOC_ROOT

exec $HOME/.env/bin/ipython notebook --profile=nbserver --no-browser
EOF
sudo update-rc.d notebook defaults 99

sudo chown -R $USER:$USER $HOME
echo 'Done: consider reboot the system'
