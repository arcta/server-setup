#!/bin/bash

########################################################################
### create local configuration and login credentials
########################################################################
cd ~

echo "#!/bin/bash

GIT_USER_NAME='<REPO>'
GIT_USER_EMAIL='<EMAIL>'
GIT_REPO_URL='<URL>'

DOMAIN='<DOMAIN>'

CLUSTER='orion'
### replicas used for load balancer (if any) ###########################
# CLUSTERIPS=(192.168.1.101 192.168.1.102 192.168.1.103)
CLUSTERIPS=()

# NODE=$(hostname)
NODE='betelgeuse'
NODEID='alpha'
NODEIP=$(ifconfig | grep 'inet addr:'| grep -v '127.0.0.1' | cut -d: -f2 | awk '{ print $1}')

NODE_MYSQL_HOST=localhost
NODE_MYSQL_PORT=3306

NODE_MONGO_HOST=127.0.0.1
NODE_MONGO_PORT=27017

NODE_REDIS_HOST=127.0.0.1
NODE_REDIS_PORT=6379

NODE_ES_HOST='localhost:9200'

NODE_DOC_ROOT='projects'

NODE_DATABASE='orion'
NODE_DATAUSER='betelgeuse'

HOME=${HOME}

########################################################################
### projects local network deployment framework
########################################################################

NODE_INFO_PORT=4000
### will increment with new project creation:
NODE_PROJECT_PORT=4000

NODE_RSTUDIO_PORT=3838
NODE_NOTEBOOK_PORT=8888

" > .local.cnf

########################################################################
### create and save local access credentials
echo "
########################################################################
### local access credentials

NODE_MYSQL_ROOT_PASS=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1)
NODE_MYSQL_PASS=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 16 | head -n 1)

NODE_MONGO_ROOT_PASS=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1)
NODE_MONGO_PASS=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 16 | head -n 1)

NODE_REDIS_PASS=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 64 | head -n 1)

NODE_CRYPTO_ALG=aes-256-cbc
NODE_CRYPTO_KEY=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 64 | head -n 1)

NODE_COOKIE_KEY=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1)
NODE_COOKIE_AGE=$((60000 * 60 * 24))

########################################################################
### external access credentials

#TWITTER_KEY=
#TWITTER_SECRET=
#TWITTER_TOKEN=
#TWITTER_TOKEN_SECRET=

#GOOGLE_APPLICATION_CREDENTIALS=$HOME/.gcp/APP-default.json

" >> .local.cnf

### add to bashrc ######################################################
tee -a .bashrc <<EOF

### use python3 as default python
#alias python=python3

### set node configuration vars
source $HOME/.local.cnf
EOF

chmod 600 .local.cnf

echo "
########################################################################
### dir | port | google-id ###  comment-out line to disable project  ###
########################################################################" > .project.cnf
mkdir .gcp

########################################################################
### add R packages to install
packages=$(cat install-user-r.txt | awk 'NR>1{print PREV} {PREV=$0} END{printf("%s",$0)}' | tr '\n' ',' | sed "s/,/','/g")

echo "
########################################################################
### R CMD BATCH install-packages.R
########################################################################

### user library (ignore a warning if already exists):
dir.create(Sys.getenv('R_LIBS_USER'), showWarnings = FALSE, recursive = TRUE)

### shiny server ###
install.packages(c('shiny','shinydashboard'), Sys.getenv('R_LIBS_USER'), repos='http://cran.rstudio.com/')

### jupyter ###
install.packages(c('rzmq','repr','IRkernel','IRdisplay'), repos = c(CRAN = 'http://irkernel.github.io/'), type = 'source')

### install packages:
install.packages(c('${packages}'), Sys.getenv('R_LIBS_USER'), repos = 'http://cran.r-project.org')
" > install-packages.R
