#!/bin/bash

########################################################################
### set up a new project as notebook + rstudio + app + api environment
### args: $1 progect subdirectory name
### opts: --node-app, --python-api, --rstudio
########################################################################
source ~/.local.cnf

if grep '^[0-9a-zA-Z_\-]*$' <<<$1 ; then
    if [ -d "$HOME/projects/$1" ]; then
        echo 'Aborting: directory exists ...'

    else
        mkdir ~/projects/$1
        ### init git and docker ########################################
        cp ~/projects/bin/.gitignore ~/projects/$1/.gitignore
        cp ~/projects/bin/Dockerfile ~/projects/$1/Dockerfile
        touch ~/projects/$1/.dockerignore

        ### init README notebook #######################################
        cp ~/projects/bin/README.ipynb ~/projects/$1/README.ipynb
        sed -i "s/PROJECT/${1}/g" ~/projects/$1/README.ipynb
        sed -i "s/DOMAIN/${DOMAIN}/g" ~/projects/$1/README.ipynb
        sed -i "s/PROTOCOL/${PROTOCOL}/g" ~/projects/$1/README.ipynb

        for arg in ${@:2}
        do
            if [ "$arg" = "--node-app" ]; then
                ### init node-app ######################################
                source ~/projects/bin/init-app $1

            elif [ "$arg" = "--python-api" ]; then
                ### init python-api ####################################
                source ~/projects/bin/init-api $1

            elif [ "$arg" = "--rstudio" ]; then
                ### init r-server ######################################
                source ~/projects/bin/init-r $1
            fi
        done

        ### add project deployment configuration #######################
        ((last = PROJECT_PORT + 0))
        ((next = PROJECT_PORT + 2))
        sed -i "s/PROJECT_PORT=${last}/PROJECT_PORT=${next}/1" ~/.local.cnf
        echo -e "${last}\t${1}\tCID" >> ~/.project.cnf

        grep -rl PROJECT ~/projects/$1 | xargs sed -i "s/PROJECT/${1}/g"
        echo "Project initialized in folder: ~/projects/${1}"
        ls -l ~/projects/$1
    fi
else
    echo "Invalid name for projects folder `$1`: use alphanumeric undescore dash"
fi
