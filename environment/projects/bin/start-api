#!/bin/bash

########################################################################
### start project python-api
### parameters: $1 project subdirectory
########################################################################
source ~/.local.cnf

if [ -d "$HOME/projects/$1" ]; then
    project="$1"
    port=$(grep -P "(?<!\d)\d{4}\t${project}\t(?!\d)" ~/.project.cnf | cut -f1)
    port=$(( $port + 1 ))

    if [[ -z "$port" || $port = \#* ]] ; then
        echo "${project} is DISABLED OR NOT IN ~/.project.cnf"
    else
        if [ -d "$HOME/projects/${project}/python-api" ]; then
            echo "Starting $project Python-API on port $port ..."

            sudo tee /etc/uwsgi/vassals/${project}.ini <<EOF
[uwsgi]
http = 127.0.0.1:$port
socket = /tmp/${project}.sock
venv = $HOME/.env
chdir = $HOME/projects/${project}/python-api
callable = app
mount = /python-api=app.py
manage-script-name = true
logto=$HOME/logs/${project}.log
processes = 4
threads = 2
stats = 127.0.0.1:$(( $port + 2000 ))
chmod-socket = 666
vacuum = true
die-on-term = true
EOF
            sudo systemctl daemon-reload

            if [ "$project" = "python-api" ]; then
                location=$""
            else
                location=$project
            fi

            echo "url: $DOMAIN/api/$location"
            sudo tee /etc/nginx/location/api-$project <<EOF
        location api/${location} {
            $ACCESS_PROJECT
            rewrite ^api/${location}/(.*) /\$1 break;
            uwsgi_pass unix:///tmp/${project}.sock;
            include uwsgi_params;
        }
EOF
            sudo systemctl restart nginx
        else
            echo "Abortnig: project $1 has no Python-API"
        fi
    fi
else
    echo "Aborting: location projects/$1 does not exist"
fi
